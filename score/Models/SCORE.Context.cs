//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace score.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Web.Caching;
    using System.Collections.Generic;

    public partial class SalesCommissionEntities : DbContext
    {
        public SalesCommissionEntities()
            : base("name=SalesCommissionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SalesBoardAllMTD> SalesBoardAllMTDs { get; set; }
        public virtual DbSet<EmployeePerformanceMTD> EmployeePerformanceMTDs { get; set; }
    
        public virtual int sp_EmployeePerformanceMTD_AllLocations_Calendar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmployeePerformanceMTD_AllLocations_Calendar");
        }
    
        public virtual int sp_EmployeePerformanceMTD_AllLocations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmployeePerformanceMTD_AllLocations");
        }
    
        public virtual ObjectResult<EmployeePerformanceMTD> sp_EmployeePerformanceMTD_ByDate(Nullable<System.DateTime> parDate)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));

                 return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeePerformanceMTD_ByDate", parDateParameter);



        }
    
        public virtual ObjectResult<EmployeePerformanceMTD> sp_EmployeePerformanceMTD_ByDate(Nullable<System.DateTime> parDate, MergeOption mergeOption)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));

             return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeePerformanceMTD_ByDate", mergeOption, parDateParameter);

        }
    
        public virtual ObjectResult<sp_ListOfSalesTeams_Result1> sp_ListOfSalesTeams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListOfSalesTeams_Result1>("sp_ListOfSalesTeams");
        }
    
        public virtual ObjectResult<EmployeePerformanceMTD> sp_EmployeeSalesBPPMTD_ByDate(Nullable<System.DateTime> parDate)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeeSalesBPPMTD_ByDate", parDateParameter);
        }
    
        public virtual ObjectResult<EmployeePerformanceMTD> sp_EmployeeSalesBPPMTD_ByDate(Nullable<System.DateTime> parDate, MergeOption mergeOption)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeeSalesBPPMTD_ByDate", mergeOption, parDateParameter);
        }
    
        public virtual int sp_EmployeeSalesBPPMTD_ByDate1(Nullable<System.DateTime> parDate)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmployeeSalesBPPMTD_ByDate1", parDateParameter);
        }
    
        public virtual List<EmployeePerformanceMTD> sp_EmployeePerformanceALL_ByDate(Nullable<System.DateTime> parDate)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));

            var x = new Cache();
            string CacheName = "empPerform" + parDate.Value.Month.ToString().Trim() + parDate.Value.Year.ToString().Trim();

            List<EmployeePerformanceMTD> empPerform = x[CacheName] as List<EmployeePerformanceMTD>;

            if (empPerform == null) //not in cache
            {
                empPerform = ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeePerformanceALL_ByDate", parDateParameter).ToList();
                x.Insert(CacheName, empPerform, null, DateTime.UtcNow.AddHours(2.25), System.Web.Caching.Cache.NoSlidingExpiration);                
            } 

            return empPerform;

        }
    
        public virtual List<EmployeePerformanceMTD> sp_EmployeePerformanceALL_ByDate(Nullable<System.DateTime> parDate, MergeOption mergeOption)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));

            if (parDate != DateTime.Today)
            {
                return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeePerformanceMTD>("sp_EmployeePerformanceALL_ByDate", mergeOption, parDateParameter).ToList();
            } else
            {
                return ((IObjectContextAdapter)this).ObjectContext.ExecuteStoreQuery<EmployeePerformanceMTD>("sp_EmployeePerformanceALL_Today", mergeOption).ToList();
            }
        }
    
        public virtual int sp_EmployeePerformanceALL_TEST(Nullable<System.DateTime> parDate)
        {
            var parDateParameter = parDate.HasValue ?
                new ObjectParameter("parDate", parDate) :
                new ObjectParameter("parDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmployeePerformanceALL_TEST", parDateParameter);
        }
    
        public virtual int sp_EmployeePerformanceTABLE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmployeePerformanceTABLE");
        }
    }
}
