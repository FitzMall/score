@model IEnumerable<score.Models.EmployeePerformanceMTD>


@{
    ViewBag.Title = "Index";
    string Location = ViewBag.Location;
    string AssociateName = "";
    string ReportDate = ViewBag.ReportDate;
    string ReportTitle = "Sales Scoreboard";

    if (Location != "")
    {
        ReportTitle += (" " + Location);
    }
    int DaysInMonth = ViewBag.DIM;
    var applicationPath = Request.ApplicationPath;
    if (applicationPath == "/")
    {
        applicationPath = "";
    }
    int inc = 0;
    int inc_DataPoints = 0;
    int inc_DataPoints2 = 0;
    string salespersonID = "";
    string savedAssociateName = "";
    ViewBag.DataPoints = "";
    ViewBag.DataPoints2 = "";
    string[] a_AssociateName = new string[980];
    decimal[] a_MTD = new decimal[980];
}
<!DOCTYPE HTML>
<html>
@foreach (var item in Model)
{
    AssociateName = item.FIRSTNAME.ToUpper() + " " + item.LASTNAME.ToUpper();
    a_MTD[inc] = ((decimal)item.MTD);
    string colorBrand = "RosyBrown";
    string colorBrandFont = "black";

    switch((string)item.VehicleMake)
    {
        case "ACURA":
            colorBrand = "IndianRed";
            break;
        case "AUDI":
            colorBrand = "DarkSalmon";
            break;
        case "BMW":
            colorBrand = "PaleVioletRed";
            break;
        case "BMW SAV":
            colorBrand = "PaleVioletRed";
            break;
        case "BUICK":
            colorBrand = "MediumVioletRed";
            break;
        case "CADILLAC":
            colorBrand = "Tomato";
            break;
        case "CHEVROLET":
            colorBrand = "DarkOrange";
            break;
        case "CHRYSLER":
            colorBrand = "Orange";
            break;
        case "DODGE":
            colorBrand = "PaleVioletRed";
            break;
        case "FORD":
            colorBrand = "Gold";
            break;
        case "GENESIS":
            colorBrand = "Khaki";
            break;
        case "HONDA":
            colorBrand = "DarkKhaki";
            break;
        case "HYUNDAI":
            colorBrand = "Yellow";
            break;
        case "INFINITI":
            colorBrand = "Thistle";
            break;
        case "JAGUAR":
            colorBrand = "MediumPurple";
            break;
        case "JEEP":
            colorBrand = "OliveDrab";
            break;
        case "KIA":
            colorBrand = "SpringGreen";
            break;
        case "LAND ROVER":
            colorBrand = "LightGreen";
            break;
        case "LEXUS":
            colorBrand = "MediumSeaGreen";
            break;
        case "LINCOLN":
            colorBrand = "ForestGreen";
            break;
        case "MAZDA":
            colorBrand = "Chartreuse";
            break;
        case "MERCEDES LIGHT":
            colorBrand = "MediumSeaGreen";
            break;
        case "MERCEDES-BENZ":
            colorBrand = "MediumSpringGreen";
            break;
        case "MITSUBISHI":
            colorBrand = "Teal";
            break;
        case "NISSAN":
            colorBrand = "Aquamarine";
            break;
        case "RAM":
            colorBrand = "SteelBlue";
            break;
        case "SAAB":
            colorBrand = "PaleTurquoise";
            break;
        case "SUBARU":
            colorBrand = "DodgerBlue";
            break;
        case "TESLA":
            colorBrand = "DarkBlue";
            colorBrandFont = "white";
            break;
        case "TOYOTA":
            colorBrand = "Tan";
            break;
        case "VOLKSWAGEN":
            colorBrand = "Chocolate";
            break;
    };


    if (item.sl_SalesAssociate1 != salespersonID)
    {
        if (inc_DataPoints > 0)
        {
            ViewBag.DataPoints += ",";
        }
        ViewBag.DataPoints += "{ x: " + inc_DataPoints + ", y: " + ((decimal)item.MTD) + ", label: \"" + AssociateName + "\" ";
        ViewBag.DataPoints += ", color: \"" + colorBrand + "\" ";
        ViewBag.DataPoints += ", indexLabel: \"" + (string)item.VehicleMake + "\" ,";
        ViewBag.DataPoints += " indexLabelFontColor: \"" + colorBrandFont + "\" ";
        ViewBag.DataPoints += ", indexLabelFontSize: 16 ";
        ViewBag.DataPoints += ", indexLabelOrientation: \"horizontal\", indexLabelPlacement: \"inside\"}";
        //  ViewBag.DataPoints += "{ y: " + ((decimal)item.MTD) + ", label: \"" + AssociateName + "\" , color: \"coral\"} ";
        inc_DataPoints += 1;
    }
    else
    {
        if (inc_DataPoints2 > 0)
        {
            ViewBag.DataPoints2 += ",";
        }
        ViewBag.DataPoints2 += "{ x: " + inc_DataPoints + ", y: " + ((decimal)item.MTD) + ", label: \"" + AssociateName + "\" ";
        ViewBag.DataPoints2 += ", color: \"" + colorBrand + "\" ";
        ViewBag.DataPoints2 += ", indexLabel: \"" + (string)item.VehicleMake + "\" ,";
        ViewBag.DataPoints2 += " indexLabelFontColor: \"" + colorBrandFont + "\" ";
        ViewBag.DataPoints2 += ", indexLabelFontSize: 16 ";
        ViewBag.DataPoints2 += ", indexLabelOrientation: \"horizontal\", indexLabelPlacement: \"inside\"}";
        inc_DataPoints2 += 1;
    }

    inc += 1;

    salespersonID = item.sl_SalesAssociate1;
    savedAssociateName = AssociateName;
}

<head>
    <meta charset="UTF-8">
    <script>
        window.onload = function () {

    var chart = new CanvasJS.Chart("chartContainer", {
                animationEnabled: true,

                title: {
    text: "@ReportTitle"
                },
                axisX: {
    interval: 1,
                    labelFontSize: 18,
                    },
                axisY2: {
    interlacedColor: "rgba(1,77,101,.2)",
                    gridColor: "rgba(1,77,101,.1)",
                },
                data: [{
    indexLabelFontSize: 16,
                    type: "stackedBar",
                    showInLegend: "true",
                    name: "",
                    xValueFormatString: "string",
                    yValueFormatString: "#",
                color: "#014D65",
                                    dataPoints: [@Html.Raw(ViewBag.DataPoints)]


                },
                    { type: "stackedBar",
                    showInLegend: "true",
                    name: "",
                        xValueFormatString: "string",
                        yValueFormatString: "#",
                    color: "cyan",
                                    dataPoints: [@Html.Raw(ViewBag.DataPoints2)]


                }
                ]
            });


            chart.render();

            }
    </script>
</head>
<body>

    VEHICLE TYPE 1
    @ViewBag.DataPoints<br />
    VEHICLE TYPE 2
    @ViewBag.DataPoints2<br />
    VEHICLE TYPE 3
    @ViewBag.DataPoints3<br />
    VEHICLE TYPE 4
    @ViewBag.DataPoints4<br />
    VEHICLE TYPE 5
    @ViewBag.DataPoints5<br />
    VEHICLE TYPE 6
    @ViewBag.DataPoints6<br />
    VEHICLE TYPE 7
    @ViewBag.DataPoints7<br />
    VEHICLE TYPE 8
    @ViewBag.DataPoints8<br />
    VEHICLE TYPE 9
    @ViewBag.DataPoints9<br />


    <div id="chartContainer" style="height: 770px; max-width: 1320px; margin: 0px auto"></div>
    <script src="../scripts/canvasjs.min.js"></script>
</body>
</html>